diff --git a/arraylist.c b/arraylist.c
index 8d1067d..b4b1b2e 100644
--- a/arraylist.c
+++ b/arraylist.c
@@ -41,7 +41,7 @@ struct arraylist {
 /**
  * Create a new, empty arraylist.
  */
-arraylist* arraylist_create()
+arraylist* arraylist_create(void)
 {
 	arraylist* new_list = malloc(sizeof(arraylist));
 	new_list->size = 0;
@@ -72,7 +72,7 @@ void arraylist_allocate(arraylist* l, unsigned int size)
 /** 
  * Return the number of items contained in the list.
  */
-extern inline unsigned int arraylist_size(arraylist*l) {
+unsigned int arraylist_size(arraylist*l) {
 	return l->size;
 }
 
diff --git a/arraylist.h b/arraylist.h
index 64cb1dc..c0954dc 100644
--- a/arraylist.h
+++ b/arraylist.h
@@ -1,3 +1,6 @@
+#ifndef ARRAYLIST
+#define ARRAYLIST
+
 /* This file was automatically generated.  Do not edit! */
 typedef struct arraylist arraylist;
 void arraylist_destroy(arraylist *l);
@@ -13,14 +16,16 @@ void arraylist_set(arraylist *l,unsigned int index,void *value);
 void *arraylist_get(arraylist *l,unsigned int index);
 void *arraylist_pop(arraylist *l);
 void arraylist_add(arraylist *l,void *item);
-inline unsigned int arraylist_size(arraylist *l);
+unsigned int arraylist_size(arraylist *l);
 void arraylist_allocate(arraylist *l,unsigned int size);
 arraylist *arraylist_create();
-#define arraylist_iterate(l, index, item) \
-	for (index = 0, item = l->body[0]; index < l->size; item = l->body[++index])
+#define arraylist_iterate(l) \
+	for (struct {unsigned int index; void *item;} ctx = {0,l->body[0]}; ctx.index < l->size && (ctx.item = l->body[ctx.index]); ctx.index++)
 struct arraylist {
 	unsigned int size; // Count of items currently in list
 	unsigned int capacity; // Allocated memory size, in items
 	void** body; // Pointer to allocated memory for items (of size capacity * sizeof(void*))
 };
 #define INTERFACE 0
+
+#endif
\ No newline at end of file
